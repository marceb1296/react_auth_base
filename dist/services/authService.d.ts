import { BaseQueryFn, FetchArgs, FetchBaseQueryError } from '@reduxjs/toolkit/query/react';
import { ILoginForm, IUser, SignInForm } from '../interfaces';
export declare const authApi: import("@reduxjs/toolkit/query/react").Api<BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError>, {
    login: import("@reduxjs/toolkit/query/react").MutationDefinition<ILoginForm, BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError>, never, IUser<any>, "api">;
    signIn: import("@reduxjs/toolkit/query/react").MutationDefinition<SignInForm, BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError>, never, IUser<any>, "api">;
    updateLogin: import("@reduxjs/toolkit/query/react").MutationDefinition<void, BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError>, never, IUser<any>, "api">;
    passwordReset: import("@reduxjs/toolkit/query/react").MutationDefinition<Record<"email", string>, BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError>, never, void, "api">;
}, "api", never, typeof import("@reduxjs/toolkit/query/react").coreModuleName | typeof import("@reduxjs/toolkit/query/react").reactHooksModuleName>;
export declare const useLoginMutation: import("@reduxjs/toolkit/dist/query/react/buildHooks").UseMutation<import("@reduxjs/toolkit/query/react").MutationDefinition<ILoginForm, BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError>, never, IUser<any>, "api">>, useUpdateLoginMutation: import("@reduxjs/toolkit/dist/query/react/buildHooks").UseMutation<import("@reduxjs/toolkit/query/react").MutationDefinition<void, BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError>, never, IUser<any>, "api">>, usePasswordResetMutation: import("@reduxjs/toolkit/dist/query/react/buildHooks").UseMutation<import("@reduxjs/toolkit/query/react").MutationDefinition<Record<"email", string>, BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError>, never, void, "api">>, useSignInMutation: import("@reduxjs/toolkit/dist/query/react/buildHooks").UseMutation<import("@reduxjs/toolkit/query/react").MutationDefinition<SignInForm, BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError>, never, IUser<any>, "api">>;
